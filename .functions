
#add my ssh public key to the specified user@host for auto ssh login
function add-key {
        cat ~/.ssh/id_rsa.pub | ssh ${1} "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
}

function ascii_clock {
	watch -n1 "date '+%D%n%T'|figlet -W"

}

function weather {
	curl wttr.in
}

function rick_roll {
	curl -s -L http://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash
}

#annotation tag for release
function git-tag {
	[[ ${#} == 1 ]] || { echo "usage: git-tag <tag>"; return 0; }
	git tag -a ${1} -m"${1}"
}

#push tags
function git-push-tags {
	git push --tags
}

#delete local tag
function git-delete-tag {
	[[ ${#} == 1 ]] || { echo "usage: git-delete-tag <tag>"; return 0; }
	git tag --delete ${1}
}

#delete remote tag
function git-delete-remote-tag {
	[[ ${#} == 1 ]] || { echo "usage: git-delete-remote-tag <tag>"; return 0; }
	git push --delete origin ${1}
}
#checkout tag
function git-checkout-tag {
	 [[ ${#} == 1 ]] || { echo "usage: git-checkout-tag <tag>"; return 0; }
	git checkout ${1}
}
#move tag to current head
function git-move-tag-to-head {
	[[ ${#} == 1 ]] || { echo "usage: git-move-tag-to-head <tag>"; return 0; }
	git-delete-tag ${1}
	git-delte-remote-tag ${1}
	git-tag ${1}
	git-push-tags
}


function ip {
	[[ ${#} == 1 ]] || { echo "usage: ip <hostname>"; return 0; }
	declare hostLine=($(grep ${1} /etc/hosts))
	echo ${hostLine[0]}
}

function add-key {
	[[ ${#} == 1 ]] || { echo "usage: add-key hostname"; return 0; }

	declare userAtIp=tpsadmin@$(ip ${1})
	echo ${userAtIp}
	cat ~/.ssh/id_rsa.pub | ssh ${userAtIp} "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
}

function list-ports {
	declare ports=$(sudo firewall-cmd --list-all | grep '^[ ]*ports:' | cut -f2 -d:)
	echo "Available ports are now: ${ports}"
}

function add-ports {
	[[ ${#} == 1 ]] || { echo "usage: add-ports <port1> [<port2> ...<portN>]"; return 0; }
	for port in ${@}
	do
		echo "Adding port ${port}"
		sudo firewall-cmd --zone=public --add-port=${port}/tcp --permanent
	done
	echo "Reloading firewall"
	sudo firewall-cmd --reload
	list-ports
}

function load-loopback {
	pactl load-module module-loopback
}

function unload-loopback {
	pactl unload-module module-loopback
}

# download a youtube video 
function download-video {
	[[ ${#} == 1 ]] || { echo "usage: download-video URL"; return 0; }
	yt-dlp -f 22 ${1}
}

# load vim with special note taking setup
function notepad {
	vim -S ~/Documents/notepads/setup.vim ${@}
}
